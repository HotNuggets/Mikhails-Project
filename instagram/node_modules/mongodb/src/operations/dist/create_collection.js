"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.CreateCollectionOperation = void 0;
var constants_1 = require("../cmap/wire_protocol/constants");
var collection_1 = require("../collection");
var error_1 = require("../error");
var command_1 = require("./command");
var indexes_1 = require("./indexes");
var operation_1 = require("./operation");
var ILLEGAL_COMMAND_FIELDS = new Set([
    'w',
    'wtimeout',
    'j',
    'fsync',
    'autoIndexId',
    'pkFactory',
    'raw',
    'readPreference',
    'session',
    'readConcern',
    'writeConcern',
    'raw',
    'fieldsAsRaw',
    'useBigInt64',
    'promoteLongs',
    'promoteValues',
    'promoteBuffers',
    'bsonRegExp',
    'serializeFunctions',
    'ignoreUndefined',
    'enableUtf8Validation'
]);
/* @internal */
var INVALID_QE_VERSION = 'Driver support of Queryable Encryption is incompatible with server. Upgrade server to use Queryable Encryption.';
/** @internal */
var CreateCollectionOperation = /** @class */ (function (_super) {
    __extends(CreateCollectionOperation, _super);
    function CreateCollectionOperation(db, name, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, db, options) || this;
        _this.options = options;
        _this.db = db;
        _this.name = name;
        return _this;
    }
    Object.defineProperty(CreateCollectionOperation.prototype, "commandName", {
        get: function () {
            return 'create';
        },
        enumerable: false,
        configurable: true
    });
    CreateCollectionOperation.prototype.execute = function (server, session) {
        var _a, _b, _c, _d, _e;
        return __awaiter(this, void 0, Promise, function () {
            var db, name, options, encryptedFields, escCollection, ecocCollection, _i, _f, collectionName, createOp, coll, createIndexOp;
            return __generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        db = this.db;
                        name = this.name;
                        options = this.options;
                        encryptedFields = (_a = options.encryptedFields) !== null && _a !== void 0 ? _a : (_c = (_b = db.client.options.autoEncryption) === null || _b === void 0 ? void 0 : _b.encryptedFieldsMap) === null || _c === void 0 ? void 0 : _c[db.databaseName + "." + name];
                        if (!encryptedFields) return [3 /*break*/, 5];
                        // Creating a QE collection required min server of 7.0.0
                        // TODO(NODE-5353): Get wire version information from connection.
                        if (!server.loadBalanced &&
                            server.description.maxWireVersion < constants_1.MIN_SUPPORTED_QE_WIRE_VERSION) {
                            throw new error_1.MongoCompatibilityError(INVALID_QE_VERSION + " The minimum server version required is " + constants_1.MIN_SUPPORTED_QE_SERVER_VERSION);
                        }
                        escCollection = (_d = encryptedFields.escCollection) !== null && _d !== void 0 ? _d : "enxcol_." + name + ".esc";
                        ecocCollection = (_e = encryptedFields.ecocCollection) !== null && _e !== void 0 ? _e : "enxcol_." + name + ".ecoc";
                        _i = 0, _f = [escCollection, ecocCollection];
                        _g.label = 1;
                    case 1:
                        if (!(_i < _f.length)) return [3 /*break*/, 4];
                        collectionName = _f[_i];
                        createOp = new CreateCollectionOperation(db, collectionName, {
                            clusteredIndex: {
                                key: { _id: 1 },
                                unique: true
                            }
                        });
                        return [4 /*yield*/, createOp.executeWithoutEncryptedFieldsCheck(server, session)];
                    case 2:
                        _g.sent();
                        _g.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        if (!options.encryptedFields) {
                            this.options = __assign(__assign({}, this.options), { encryptedFields: encryptedFields });
                        }
                        _g.label = 5;
                    case 5: return [4 /*yield*/, this.executeWithoutEncryptedFieldsCheck(server, session)];
                    case 6:
                        coll = _g.sent();
                        if (!encryptedFields) return [3 /*break*/, 8];
                        createIndexOp = indexes_1.CreateIndexesOperation.fromIndexSpecification(db, name, { __safeContent__: 1 }, {});
                        return [4 /*yield*/, createIndexOp.execute(server, session)];
                    case 7:
                        _g.sent();
                        _g.label = 8;
                    case 8: return [2 /*return*/, coll];
                }
            });
        });
    };
    CreateCollectionOperation.prototype.executeWithoutEncryptedFieldsCheck = function (server, session) {
        return __awaiter(this, void 0, Promise, function () {
            var db, name, options, cmd, n;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        db = this.db;
                        name = this.name;
                        options = this.options;
                        cmd = { create: name };
                        for (n in options) {
                            if (options[n] != null &&
                                typeof options[n] !== 'function' &&
                                !ILLEGAL_COMMAND_FIELDS.has(n)) {
                                cmd[n] = options[n];
                            }
                        }
                        // otherwise just execute the command
                        return [4 /*yield*/, _super.prototype.executeCommand.call(this, server, session, cmd)];
                    case 1:
                        // otherwise just execute the command
                        _a.sent();
                        return [2 /*return*/, new collection_1.Collection(db, name, options)];
                }
            });
        });
    };
    return CreateCollectionOperation;
}(command_1.CommandOperation));
exports.CreateCollectionOperation = CreateCollectionOperation;
operation_1.defineAspects(CreateCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);
