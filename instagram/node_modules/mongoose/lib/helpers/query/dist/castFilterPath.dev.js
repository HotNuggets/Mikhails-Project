'use strict';

var isOperator = require('./isOperator');

module.exports = function castFilterPath(ctx, schematype, val) {
  var any$conditionals = Object.keys(val).some(isOperator);

  if (!any$conditionals) {
    return schematype.castForQuery(null, val, ctx);
  }

  var ks = Object.keys(val);
  var k = ks.length;

  while (k--) {
    var $cond = ks[k];
    var nested = val[$cond];

    if ($cond === '$not') {
      if (nested && schematype && !schematype.caster) {
        var _keys = Object.keys(nested);

        if (_keys.length && isOperator(_keys[0])) {
          for (var _i = 0, _Object$keys = Object.keys(nested); _i < _Object$keys.length; _i++) {
            var key = _Object$keys[_i];
            nested[key] = schematype.castForQuery(key, nested[key], ctx);
          }
        } else {
          val[$cond] = schematype.castForQuery($cond, nested, ctx);
        }

        continue;
      }
    } else {
      val[$cond] = schematype.castForQuery($cond, nested, ctx);
    }
  }

  return val;
};