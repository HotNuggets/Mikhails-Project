"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.ListIndexesOperation = exports.DropIndexOperation = exports.CreateIndexesOperation = void 0;
var responses_1 = require("../cmap/wire_protocol/responses");
var error_1 = require("../error");
var utils_1 = require("../utils");
var command_1 = require("./command");
var operation_1 = require("./operation");
var VALID_INDEX_OPTIONS = new Set([
    'background',
    'unique',
    'name',
    'partialFilterExpression',
    'sparse',
    'hidden',
    'expireAfterSeconds',
    'storageEngine',
    'collation',
    'version',
    // text indexes
    'weights',
    'default_language',
    'language_override',
    'textIndexVersion',
    // 2d-sphere indexes
    '2dsphereIndexVersion',
    // 2d indexes
    'bits',
    'min',
    'max',
    // geoHaystack Indexes
    'bucketSize',
    // wildcard indexes
    'wildcardProjection'
]);
function isIndexDirection(x) {
    return (typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack');
}
function isSingleIndexTuple(t) {
    return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);
}
/**
 * Converts an `IndexSpecification`, which can be specified in multiple formats, into a
 * valid `key` for the createIndexes command.
 */
function constructIndexDescriptionMap(indexSpec) {
    var _a;
    var key = new Map();
    var indexSpecs = !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;
    // Iterate through array and handle different types
    for (var _i = 0, indexSpecs_1 = indexSpecs; _i < indexSpecs_1.length; _i++) {
        var spec = indexSpecs_1[_i];
        if (typeof spec === 'string') {
            key.set(spec, 1);
        }
        else if (Array.isArray(spec)) {
            key.set(spec[0], (_a = spec[1]) !== null && _a !== void 0 ? _a : 1);
        }
        else if (spec instanceof Map) {
            for (var _b = 0, spec_1 = spec; _b < spec_1.length; _b++) {
                var _c = spec_1[_b], property = _c[0], value = _c[1];
                key.set(property, value);
            }
        }
        else if (utils_1.isObject(spec)) {
            for (var _d = 0, _e = Object.entries(spec); _d < _e.length; _d++) {
                var _f = _e[_d], property = _f[0], value = _f[1];
                key.set(property, value);
            }
        }
    }
    return key;
}
/**
 * Receives an index description and returns a modified index description which has had invalid options removed
 * from the description and has mapped the `version` option to the `v` option.
 */
function resolveIndexDescription(description) {
    var validProvidedOptions = Object.entries(description).filter(function (_a) {
        var optionName = _a[0];
        return VALID_INDEX_OPTIONS.has(optionName);
    });
    return Object.fromEntries(
    // we support the `version` option, but the `createIndexes` command expects it to be the `v`
    validProvidedOptions.map(function (_a) {
        var name = _a[0], value = _a[1];
        return (name === 'version' ? ['v', value] : [name, value]);
    }));
}
string, direction;
IndexDirection;
[] > ;
/** @internal */
var CreateIndexesOperation = /** @class */ (function (_super) {
    __extends(CreateIndexesOperation, _super);
    function CreateIndexesOperation(parent, collectionName, indexes, options) {
        var _this = _super.call(this, parent, options) || this;
        _this.options = options !== null && options !== void 0 ? options : {};
        _this.collectionName = collectionName;
        _this.indexes = indexes.map(function (userIndex) {
            var _a;
            // Ensure the key is a Map to preserve index key ordering
            var key = userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));
            var name = (_a = userIndex.name) !== null && _a !== void 0 ? _a : Array.from(key).flat().join('_');
            var validIndexOptions = resolveIndexDescription(userIndex);
            return __assign(__assign({}, validIndexOptions), { name: name,
                key: key });
        });
        return _this;
    }
    CreateIndexesOperation.fromIndexDescriptionArray = function (parent, collectionName, indexes, options) {
        return new CreateIndexesOperation(parent, collectionName, indexes, options);
    };
    CreateIndexesOperation.fromIndexSpecification = function (parent, collectionName, indexSpec, options) {
        if (options === void 0) { options = {}; }
        var key = constructIndexDescriptionMap(indexSpec);
        var description = __assign(__assign({}, options), { key: key });
        return new CreateIndexesOperation(parent, collectionName, [description], options);
    };
    Object.defineProperty(CreateIndexesOperation.prototype, "commandName", {
        get: function () {
            return 'createIndexes';
        },
        enumerable: false,
        configurable: true
    });
    CreateIndexesOperation.prototype.execute = function (server, session) {
        return __awaiter(this, void 0, Promise, function () {
            var options, indexes, serverWireVersion, cmd, indexNames;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        options = this.options;
                        indexes = this.indexes;
                        serverWireVersion = utils_1.maxWireVersion(server);
                        cmd = { createIndexes: this.collectionName, indexes: indexes };
                        if (options.commitQuorum != null) {
                            if (serverWireVersion < 9) {
                                throw new error_1.MongoCompatibilityError('Option `commitQuorum` for `createIndexes` not supported on servers < 4.4');
                            }
                            cmd.commitQuorum = options.commitQuorum;
                        }
                        // collation is set on each index, it should not be defined at the root
                        this.options.collation = undefined;
                        return [4 /*yield*/, _super.prototype.executeCommand.call(this, server, session, cmd)];
                    case 1:
                        _a.sent();
                        indexNames = indexes.map(function (index) { return index.name || ''; });
                        return [2 /*return*/, indexNames];
                }
            });
        });
    };
    return CreateIndexesOperation;
}(command_1.CommandOperation));
exports.CreateIndexesOperation = CreateIndexesOperation;
/** @internal */
var DropIndexOperation = /** @class */ (function (_super) {
    __extends(DropIndexOperation, _super);
    function DropIndexOperation(collection, indexName, options) {
        var _this = _super.call(this, collection, options) || this;
        _this.options = options !== null && options !== void 0 ? options : {};
        _this.collection = collection;
        _this.indexName = indexName;
        return _this;
    }
    Object.defineProperty(DropIndexOperation.prototype, "commandName", {
        get: function () {
            return 'dropIndexes';
        },
        enumerable: false,
        configurable: true
    });
    DropIndexOperation.prototype.execute = function (server, session) {
        return __awaiter(this, void 0, Promise, function () {
            var cmd;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };
                        return [4 /*yield*/, _super.prototype.executeCommand.call(this, server, session, cmd)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return DropIndexOperation;
}(command_1.CommandOperation));
exports.DropIndexOperation = DropIndexOperation;
/** @internal */
var ListIndexesOperation = /** @class */ (function (_super) {
    __extends(ListIndexesOperation, _super);
    function ListIndexesOperation(collection, options) {
        var _this = _super.call(this, collection, options) || this;
        _this.options = __assign({}, options);
        delete _this.options.writeConcern;
        _this.collectionNamespace = collection.s.namespace;
        return _this;
    }
    Object.defineProperty(ListIndexesOperation.prototype, "commandName", {
        get: function () {
            return 'listIndexes';
        },
        enumerable: false,
        configurable: true
    });
    ListIndexesOperation.prototype.execute = function (server, session) {
        return __awaiter(this, void 0, Promise, function () {
            var serverWireVersion, cursor, command;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        serverWireVersion = utils_1.maxWireVersion(server);
                        cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};
                        command = { listIndexes: this.collectionNamespace.collection, cursor: cursor };
                        // we check for undefined specifically here to allow falsy values
                        // eslint-disable-next-line no-restricted-syntax
                        if (serverWireVersion >= 9 && this.options.comment !== undefined) {
                            command.comment = this.options.comment;
                        }
                        return [4 /*yield*/, _super.prototype.executeCommand.call(this, server, session, command, responses_1.CursorResponse)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return ListIndexesOperation;
}(command_1.CommandOperation));
exports.ListIndexesOperation = ListIndexesOperation;
operation_1.defineAspects(ListIndexesOperation, [
    operation_1.Aspect.READ_OPERATION,
    operation_1.Aspect.RETRYABLE,
    operation_1.Aspect.CURSOR_CREATING
]);
operation_1.defineAspects(CreateIndexesOperation, [operation_1.Aspect.WRITE_OPERATION]);
operation_1.defineAspects(DropIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);
