"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MongoCryptKMSRequestNetworkTimeoutError = exports.MongoCryptAzureKMSRequestError = exports.MongoCryptCreateEncryptedCollectionError = exports.MongoCryptCreateDataKeyError = exports.MongoCryptInvalidArgumentError = exports.MongoCryptError = void 0;

var error_1 = require("../error");
/**
 * @public
 * An error indicating that something went wrong specifically with MongoDB Client Encryption
 */


var MongoCryptError =
/*#__PURE__*/
function (_error_1$MongoError) {
  _inherits(MongoCryptError, _error_1$MongoError);

  /**
   * **Do not use this constructor!**
   *
   * Meant for internal use only.
   *
   * @remarks
   * This class is only meant to be constructed within the driver. This constructor is
   * not subject to semantic versioning compatibility guarantees and may change at any time.
   *
   * @public
   **/
  function MongoCryptError(message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, MongoCryptError);

    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptError).call(this, message, options));
  }

  _createClass(MongoCryptError, [{
    key: "name",
    get: function get() {
      return 'MongoCryptError';
    }
  }]);

  return MongoCryptError;
}(error_1.MongoError);

exports.MongoCryptError = MongoCryptError;
/**
 * @public
 *
 * An error indicating an invalid argument was provided to an encryption API.
 */

var MongoCryptInvalidArgumentError =
/*#__PURE__*/
function (_MongoCryptError) {
  _inherits(MongoCryptInvalidArgumentError, _MongoCryptError);

  /**
   * **Do not use this constructor!**
   *
   * Meant for internal use only.
   *
   * @remarks
   * This class is only meant to be constructed within the driver. This constructor is
   * not subject to semantic versioning compatibility guarantees and may change at any time.
   *
   * @public
   **/
  function MongoCryptInvalidArgumentError(message) {
    _classCallCheck(this, MongoCryptInvalidArgumentError);

    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptInvalidArgumentError).call(this, message));
  }

  _createClass(MongoCryptInvalidArgumentError, [{
    key: "name",
    get: function get() {
      return 'MongoCryptInvalidArgumentError';
    }
  }]);

  return MongoCryptInvalidArgumentError;
}(MongoCryptError);

exports.MongoCryptInvalidArgumentError = MongoCryptInvalidArgumentError;
/**
 * @public
 * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys
 */

var MongoCryptCreateDataKeyError =
/*#__PURE__*/
function (_MongoCryptError2) {
  _inherits(MongoCryptCreateDataKeyError, _MongoCryptError2);

  /**
   * **Do not use this constructor!**
   *
   * Meant for internal use only.
   *
   * @remarks
   * This class is only meant to be constructed within the driver. This constructor is
   * not subject to semantic versioning compatibility guarantees and may change at any time.
   *
   * @public
   **/
  function MongoCryptCreateDataKeyError(encryptedFields, _ref) {
    var _this;

    var cause = _ref.cause;

    _classCallCheck(this, MongoCryptCreateDataKeyError);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptCreateDataKeyError).call(this, "Unable to complete creating data keys: ".concat(cause.message), {
      cause: cause
    }));
    _this.encryptedFields = encryptedFields;
    return _this;
  }

  _createClass(MongoCryptCreateDataKeyError, [{
    key: "name",
    get: function get() {
      return 'MongoCryptCreateDataKeyError';
    }
  }]);

  return MongoCryptCreateDataKeyError;
}(MongoCryptError);

exports.MongoCryptCreateDataKeyError = MongoCryptCreateDataKeyError;
/**
 * @public
 * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection
 */

var MongoCryptCreateEncryptedCollectionError =
/*#__PURE__*/
function (_MongoCryptError3) {
  _inherits(MongoCryptCreateEncryptedCollectionError, _MongoCryptError3);

  /**
   * **Do not use this constructor!**
   *
   * Meant for internal use only.
   *
   * @remarks
   * This class is only meant to be constructed within the driver. This constructor is
   * not subject to semantic versioning compatibility guarantees and may change at any time.
   *
   * @public
   **/
  function MongoCryptCreateEncryptedCollectionError(encryptedFields, _ref2) {
    var _this2;

    var cause = _ref2.cause;

    _classCallCheck(this, MongoCryptCreateEncryptedCollectionError);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptCreateEncryptedCollectionError).call(this, "Unable to create collection: ".concat(cause.message), {
      cause: cause
    }));
    _this2.encryptedFields = encryptedFields;
    return _this2;
  }

  _createClass(MongoCryptCreateEncryptedCollectionError, [{
    key: "name",
    get: function get() {
      return 'MongoCryptCreateEncryptedCollectionError';
    }
  }]);

  return MongoCryptCreateEncryptedCollectionError;
}(MongoCryptError);

exports.MongoCryptCreateEncryptedCollectionError = MongoCryptCreateEncryptedCollectionError;
/**
 * @public
 * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.
 */

var MongoCryptAzureKMSRequestError =
/*#__PURE__*/
function (_MongoCryptError4) {
  _inherits(MongoCryptAzureKMSRequestError, _MongoCryptError4);

  /**
   * **Do not use this constructor!**
   *
   * Meant for internal use only.
   *
   * @remarks
   * This class is only meant to be constructed within the driver. This constructor is
   * not subject to semantic versioning compatibility guarantees and may change at any time.
   *
   * @public
   **/
  function MongoCryptAzureKMSRequestError(message, body) {
    var _this3;

    _classCallCheck(this, MongoCryptAzureKMSRequestError);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptAzureKMSRequestError).call(this, message));
    _this3.body = body;
    return _this3;
  }

  _createClass(MongoCryptAzureKMSRequestError, [{
    key: "name",
    get: function get() {
      return 'MongoCryptAzureKMSRequestError';
    }
  }]);

  return MongoCryptAzureKMSRequestError;
}(MongoCryptError);

exports.MongoCryptAzureKMSRequestError = MongoCryptAzureKMSRequestError;
/** @public */

var MongoCryptKMSRequestNetworkTimeoutError =
/*#__PURE__*/
function (_MongoCryptError5) {
  _inherits(MongoCryptKMSRequestNetworkTimeoutError, _MongoCryptError5);

  function MongoCryptKMSRequestNetworkTimeoutError() {
    _classCallCheck(this, MongoCryptKMSRequestNetworkTimeoutError);

    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptKMSRequestNetworkTimeoutError).apply(this, arguments));
  }

  _createClass(MongoCryptKMSRequestNetworkTimeoutError, [{
    key: "name",
    get: function get() {
      return 'MongoCryptKMSRequestNetworkTimeoutError';
    }
  }]);

  return MongoCryptKMSRequestNetworkTimeoutError;
}(MongoCryptError);

exports.MongoCryptKMSRequestNetworkTimeoutError = MongoCryptKMSRequestNetworkTimeoutError;