"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.CommandOperation = void 0;
var error_1 = require("../error");
var explain_1 = require("../explain");
var read_concern_1 = require("../read_concern");
var server_selection_1 = require("../sdam/server_selection");
var utils_1 = require("../utils");
var write_concern_1 = require("../write_concern");
var operation_1 = require("./operation");
/** @internal */
var CommandOperation = /** @class */ (function (_super) {
    __extends(CommandOperation, _super);
    function CommandOperation(parent, options) {
        var _this = _super.call(this, options) || this;
        _this.options = options !== null && options !== void 0 ? options : {};
        // NOTE: this was explicitly added for the add/remove user operations, it's likely
        //       something we'd want to reconsider. Perhaps those commands can use `Admin`
        //       as a parent?
        var dbNameOverride = (options === null || options === void 0 ? void 0 : options.dbName) || (options === null || options === void 0 ? void 0 : options.authdb);
        if (dbNameOverride) {
            _this.ns = new utils_1.MongoDBNamespace(dbNameOverride, '$cmd');
        }
        else {
            _this.ns = parent
                ? parent.s.namespace.withCollection('$cmd')
                : new utils_1.MongoDBNamespace('admin', '$cmd');
        }
        _this.readConcern = read_concern_1.ReadConcern.fromOptions(options);
        _this.writeConcern = write_concern_1.WriteConcern.fromOptions(options);
        if (_this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {
            _this.explain = explain_1.Explain.fromOptions(options);
        }
        else if ((options === null || options === void 0 ? void 0 : options.explain) != null) {
            throw new error_1.MongoInvalidArgumentError("Option \"explain\" is not supported on this command");
        }
        return _this;
    }
    Object.defineProperty(CommandOperation.prototype, "canRetryWrite", {
        get: function () {
            if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {
                return this.explain == null;
            }
            return _super.prototype.canRetryWrite;
        },
        enumerable: false,
        configurable: true
    });
    CommandOperation.prototype.executeCommand = function (server, session, cmd, responseType) {
        return __awaiter(this, void 0, Promise, function () {
            var options, serverWireVersion, inTransaction;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.server = server;
                        options = __assign(__assign(__assign({}, this.options), this.bsonOptions), { readPreference: this.readPreference, session: session });
                        serverWireVersion = utils_1.maxWireVersion(server);
                        inTransaction = this.session && this.session.inTransaction();
                        if (this.readConcern && utils_1.commandSupportsReadConcern(cmd) && !inTransaction) {
                            Object.assign(cmd, { readConcern: this.readConcern });
                        }
                        if (this.trySecondaryWrite && serverWireVersion < server_selection_1.MIN_SECONDARY_WRITE_WIRE_VERSION) {
                            options.omitReadPreference = true;
                        }
                        if (this.writeConcern && this.hasAspect(operation_1.Aspect.WRITE_OPERATION) && !inTransaction) {
                            write_concern_1.WriteConcern.apply(cmd, this.writeConcern);
                        }
                        if (options.collation &&
                            typeof options.collation === 'object' &&
                            !this.hasAspect(operation_1.Aspect.SKIP_COLLATION)) {
                            Object.assign(cmd, { collation: options.collation });
                        }
                        if (typeof options.maxTimeMS === 'number') {
                            cmd.maxTimeMS = options.maxTimeMS;
                        }
                        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE) && this.explain) {
                            cmd = utils_1.decorateWithExplain(cmd, this.explain);
                        }
                        return [4 /*yield*/, server.command(this.ns, cmd, options, responseType)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return CommandOperation;
}(operation_1.AbstractOperation));
exports.CommandOperation = CommandOperation;
