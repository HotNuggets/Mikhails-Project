"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.DropDatabaseOperation = exports.DropCollectionOperation = void 0;
var error_1 = require("../error");
var command_1 = require("./command");
var operation_1 = require("./operation");
/** @internal */
var DropCollectionOperation = /** @class */ (function (_super) {
    __extends(DropCollectionOperation, _super);
    function DropCollectionOperation(db, name, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, db, options) || this;
        _this.db = db;
        _this.options = options;
        _this.name = name;
        return _this;
    }
    Object.defineProperty(DropCollectionOperation.prototype, "commandName", {
        get: function () {
            return 'drop';
        },
        enumerable: false,
        configurable: true
    });
    DropCollectionOperation.prototype.execute = function (server, session) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, Promise, function () {
            var db, options, name, encryptedFieldsMap, encryptedFields, listCollectionsResult, escCollection, ecocCollection, _i, _e, collectionName, dropOp, err_1;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        db = this.db;
                        options = this.options;
                        name = this.name;
                        encryptedFieldsMap = (_a = db.client.options.autoEncryption) === null || _a === void 0 ? void 0 : _a.encryptedFieldsMap;
                        encryptedFields = (_b = options.encryptedFields) !== null && _b !== void 0 ? _b : encryptedFieldsMap === null || encryptedFieldsMap === void 0 ? void 0 : encryptedFieldsMap[db.databaseName + "." + name];
                        if (!(!encryptedFields && encryptedFieldsMap)) return [3 /*break*/, 2];
                        return [4 /*yield*/, db
                                .listCollections({ name: name }, { nameOnly: false })
                                .toArray()];
                    case 1:
                        listCollectionsResult = _f.sent();
                        encryptedFields = (_d = (_c = listCollectionsResult === null || listCollectionsResult === void 0 ? void 0 : listCollectionsResult[0]) === null || _c === void 0 ? void 0 : _c.options) === null || _d === void 0 ? void 0 : _d.encryptedFields;
                        _f.label = 2;
                    case 2:
                        if (!encryptedFields) return [3 /*break*/, 8];
                        escCollection = encryptedFields.escCollection || "enxcol_." + name + ".esc";
                        ecocCollection = encryptedFields.ecocCollection || "enxcol_." + name + ".ecoc";
                        _i = 0, _e = [escCollection, ecocCollection];
                        _f.label = 3;
                    case 3:
                        if (!(_i < _e.length)) return [3 /*break*/, 8];
                        collectionName = _e[_i];
                        dropOp = new DropCollectionOperation(db, collectionName);
                        _f.label = 4;
                    case 4:
                        _f.trys.push([4, 6, , 7]);
                        return [4 /*yield*/, dropOp.executeWithoutEncryptedFieldsCheck(server, session)];
                    case 5:
                        _f.sent();
                        return [3 /*break*/, 7];
                    case 6:
                        err_1 = _f.sent();
                        if (!(err_1 instanceof error_1.MongoServerError) ||
                            err_1.code !== error_1.MONGODB_ERROR_CODES.NamespaceNotFound) {
                            throw err_1;
                        }
                        return [3 /*break*/, 7];
                    case 7:
                        _i++;
                        return [3 /*break*/, 3];
                    case 8: return [4 /*yield*/, this.executeWithoutEncryptedFieldsCheck(server, session)];
                    case 9: return [2 /*return*/, _f.sent()];
                }
            });
        });
    };
    DropCollectionOperation.prototype.executeWithoutEncryptedFieldsCheck = function (server, session) {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.executeCommand.call(this, server, session, { drop: this.name })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, true];
                }
            });
        });
    };
    return DropCollectionOperation;
}(command_1.CommandOperation));
exports.DropCollectionOperation = DropCollectionOperation;
/** @internal */
var DropDatabaseOperation = /** @class */ (function (_super) {
    __extends(DropDatabaseOperation, _super);
    function DropDatabaseOperation(db, options) {
        var _this = _super.call(this, db, options) || this;
        _this.options = options;
        return _this;
    }
    Object.defineProperty(DropDatabaseOperation.prototype, "commandName", {
        get: function () {
            return 'dropDatabase';
        },
        enumerable: false,
        configurable: true
    });
    DropDatabaseOperation.prototype.execute = function (server, session) {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.executeCommand.call(this, server, session, { dropDatabase: 1 })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, true];
                }
            });
        });
    };
    return DropDatabaseOperation;
}(command_1.CommandOperation));
exports.DropDatabaseOperation = DropDatabaseOperation;
operation_1.defineAspects(DropCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);
operation_1.defineAspects(DropDatabaseOperation, [operation_1.Aspect.WRITE_OPERATION]);
