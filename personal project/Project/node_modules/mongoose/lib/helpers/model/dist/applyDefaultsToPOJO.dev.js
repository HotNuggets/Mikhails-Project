'use strict';

module.exports = function applyDefaultsToPOJO(doc, schema) {
  var paths = Object.keys(schema.paths);
  var plen = paths.length;

  var _loop = function _loop(i) {
    var curPath = '';
    var p = paths[i];
    var type = schema.paths[p];
    var path = type.splitPath();
    var len = path.length;
    var doc_ = doc;

    for (var j = 0; j < len; ++j) {
      if (doc_ == null) {
        break;
      }

      var piece = path[j];
      curPath += (!curPath.length ? '' : '.') + piece;

      if (j === len - 1) {
        if (typeof doc_[piece] !== 'undefined') {
          if (type.$isSingleNested) {
            applyDefaultsToPOJO(doc_[piece], type.caster.schema);
          } else if (type.$isMongooseDocumentArray && Array.isArray(doc_[piece])) {
            doc_[piece].forEach(function (el) {
              return applyDefaultsToPOJO(el, type.schema);
            });
          }

          break;
        }

        var def = type.getDefault(doc, false, {
          skipCast: true
        });

        if (typeof def !== 'undefined') {
          doc_[piece] = def;

          if (type.$isSingleNested) {
            applyDefaultsToPOJO(def, type.caster.schema);
          } else if (type.$isMongooseDocumentArray && Array.isArray(def)) {
            def.forEach(function (el) {
              return applyDefaultsToPOJO(el, type.schema);
            });
          }
        }
      } else {
        if (doc_[piece] == null) {
          doc_[piece] = {};
        }

        doc_ = doc_[piece];
      }
    }
  };

  for (var i = 0; i < plen; ++i) {
    _loop(i);
  }
};