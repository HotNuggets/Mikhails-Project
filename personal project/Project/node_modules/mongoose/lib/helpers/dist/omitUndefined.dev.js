'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

module.exports = function omitUndefined(val) {
  if (val == null || _typeof(val) !== 'object') {
    return val;
  }

  if (Array.isArray(val)) {
    for (var i = val.length - 1; i >= 0; --i) {
      if (val[i] === undefined) {
        val.splice(i, 1);
      }
    }
  }

  for (var _i = 0, _Object$keys = Object.keys(val); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];

    if (val[key] === void 0) {
      delete val[key];
    }
  }

  return val;
};